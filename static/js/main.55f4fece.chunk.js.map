{"version":3,"sources":["components/Profile/Profile.module.scss","components/Statistics/Statistics.module.scss","components/FriendListItem/FriendListItem.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Container/Container.module.scss","components/Profile/Profile.js","components/Statistics/Statistics.js","components/StatusIndicator/StatusIndicator.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","userName","tag","location","followers","views","likes","className","s","profile","description","src","alt","name","stats","label","quantity","toLocaleString","Statistics","title","statistics","map","stat","item","style","backgroundColor","randomColor","percentage","id","StatusIndicator","styled","span","props","isOnline","css","FriendListItem","list","status","width","FriendList","friends","friend","toString","propType","PropTypes","arrayOf","shape","string","isRequired","TransactionHistory","items","type","amount","currency","Container","children","App","user","username","statsData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f4fece.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__21OnS\",\"description\":\"Profile_description__34FEo\",\"avatar\":\"Profile_avatar__1v5nf\",\"name\":\"Profile_name__1ZhOs\",\"tag\":\"Profile_tag__3l0KN\",\"location\":\"Profile_location__2OnXb\",\"stats\":\"Profile_stats__TbiWg\",\"quantity\":\"Profile_quantity__2gul1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1k4Wt\",\"title\":\"Statistics_title__1rVXP\",\"stat-list\":\"Statistics_stat-list__1KgYA\",\"item\":\"Statistics_item__34fLi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendListItem_list__3GJnf\",\"item\":\"FriendListItem_item__3bcuF\",\"status\":\"FriendListItem_status__2_wqP\",\"avatar\":\"FriendListItem_avatar__3Tn_T\",\"name\":\"FriendListItem_name__v9gYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__HUStx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2F9MI\"};","import PropTypes from \"prop-types\";\nimport s from \"./Profile.module.scss\";\n\nexport const Profile = ({\n  avatar,\n  userName,\n  tag,\n  location,\n  followers,\n  views,\n  likes,\n}) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n        <p className={s.name}>{userName}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>\n            {followers.toLocaleString(\"en-IN\")}\n          </span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views.toLocaleString(\"en-IN\")}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes.toLocaleString(\"en-IN\")}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.scss\";\nimport randomColor from \"randomcolor\";\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s[\"stat-list\"]}>\n        {stats.map((stat) => (\n          <li\n            className={s.item}\n            key={stat.id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n","import styled, { css } from \"styled-components\";\n\nexport const StatusIndicator = styled.span`\n  display: block;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: red;\n  overflow: hidden;\n\n  ${(props) =>\n    props.isOnline &&\n    css`\n      background: green;\n    `}\n`;\n//\n","import PropTypes from \"prop-types\";\nimport { StatusIndicator } from \"../StatusIndicator\";\nimport s from \"./FriendListItem.module.scss\";\n\nexport function FriendListItem({ avatar, name, isOnline = false }) {\n  return (\n    <li className={`${s.list} ${s.item}`}>\n      <StatusIndicator isOnline={isOnline} className={s.status} />\n      <img className={s.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import s from \"./FriendList.module.scss\";\nimport { FriendListItem } from \"../FriendListItem\";\nimport PropTypes from \"prop-types\";\n\nexport function FriendList({ friends }) {\n  return (\n    <ul className={s[\"friend-list\"]}>\n      {friends.map((friend) => (\n        <FriendListItem\n          key={friend.id.toString()}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propType = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import s from \"./TransactionHistory.module.scss\";\nimport PropTypes from \"prop-types\";\n\nexport function TransactionHistory({ items }) {\n  return (\n    <table className={s[\"transaction-history\"]}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => {\n          const { id, type, amount, currency } = item;\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import s from \"./Container.module.scss\";\n\nexport function Container({ children }) {\n  return <div className={s.Container}>{children}</div>;\n}\n","import { Profile } from \"./components/Profile\";\nimport { Statistics } from \"./components/Statistics\";\nimport { FriendList } from \"./components/FriendList\";\nimport { TransactionHistory } from \"./components/TransactionHistory\";\nimport { Container } from \"./components/Container\";\nimport user from \"./components/Profile/user.json\";\nimport friends from \"./components/FriendListItem/friends.json\";\nimport statsData from \"./components/Statistics/stats-data.json\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <Profile\n          userName={user.username}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n          followers={user.stats.followers}\n          views={user.stats.views}\n          likes={user.stats.likes}\n        />\n      </Container>\n      <Container>\n        <Statistics title=\"Upload stats\" stats={statsData} />\n      </Container>\n      <Container>\n        <FriendList friends={friends} />\n      </Container>\n      <Container>\n        <TransactionHistory items={transactions} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}